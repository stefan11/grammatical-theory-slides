

% http://tex.stackexchange.com/questions/355365/drawing-an-ellipse-around-an-edge-in-forest/355415#355415
% FÃ¼r Ellipsen um Knotenkanten
\usetikzlibrary{shapes.geometric,fit}


% http://tex.stackexchange.com/questions/355477/overlays-of-edge-related-shapes-in-forest/355485#355485


\forestset{%
  circle edge/.style={
    tikz+={
          \node [fit=(.child anchor) (!u.parent anchor), draw=\foresteoption{circle edge colour},
            visible on=#1, ellipse, inner ysep=1.5pt, line width=0.25mm ] {};
        }
  },
%  circle edge/.default=<1->,
  declare toks={circle edge colour}{red},
}



% https://tex.stackexchange.com/questions/477532/avoiding-jumping-nodes-in-a-tree-with-forest-and-beamer/477688#477688
\tikzset{min width/.style n args={2}{/utils/exec={\pgfmathparse{max(width("#1"),width("#2"))}
 \edef\mywidth{\pgfmathresult}},
 text width={\mywidth pt}}}



% https://tex.stackexchange.com/a/253384/18561
\tikzset{% set up for transitions using tikz with beamer overlays
  alerted/.style={color=alerted text.fg},
  alert on/.style={alt=#1{alerted}{}},
}
\forestset{%
  alert on/.style={%
    for tree={%
      /tikz/alert on={#1},
      edge={/tikz/alert on={#1}}}},
}

% Saso 2021 This is my usual set of beamer-related styles for forest:
\forestset{
  only/.code 2 args={\only<#1>{\pgfkeysalso{#2}}},
  temporal/.code n args=4{\temporal<#1>{\pgfkeysalso{#2}}{\pgfkeysalso{#3}}{\pgfkeysalso{#4}}},
  alt/.code n args=3{\alt<#1>{\pgfkeysalso{#2}}{\pgfkeysalso{#3}}},
  onslide/.style={content format={\noexpand\onslide<#1>{$\forestoption{content}$}}},
}
\tikzset{
  only/.code 2 args={\only<#1>{\pgfkeysalso{#2}}},
  temporal/.code n args=4{\temporal<#1>{\pgfkeysalso{#2}}{\pgfkeysalso{#3}}{\pgfkeysalso{#4}}},
  alt/.code n args=3{\alt<#1>{\pgfkeysalso{#2}}{\pgfkeysalso{#3}}},
}
% patch beamer
\def\temporal<#1>#2#3#4{%beamer's \temporal is broken?
  % #1 --- must be a single frame number ...
  \alt<#1>{#3}{\alt<-#1>{#2}{#4}}%
}

% And here I adapt your "visible on" to include "edge-removal". 
\forestset{
 visible on/.style={
   alt={#1}{}{
     opacity=0,text opacity=0, for nodewalk={current, children}{edge'={}},
     % phantom % would do a similar job, but using it the tree "jumps"
   },
 },
} 